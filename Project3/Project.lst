Microsoft (R) Macro Assembler Version 14.28.29335.0	    02/09/21 23:01:03
<Data Validation, Looping, and Constants     (Proj3_SharpKel  Page 1 - 1


				TITLE Data Validation, Looping, and Constants     (Proj3_SharpKel.asm)

				; Author: Kelley Sharp
				; Last Modified: 2/07/2021
				; OSU email address: sharpkel@oregonstate.edu
				; Course number/section:   CS271 Section 400
				; Project Number: 03                 Due Date: 2/07/2021
				; Description: Program prompts user to enter numbers within the specified range. When a non-negative number is entered calculations based on the valid numbers entered are displayed

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data
				; Constants with text-equivalents for easier string interpolation
 =-000000C8			LOWER_MIN   EQU -200
 = "-200"			LOWER_MIN_T EQU <"-200"> 
 =-00000064			LOWER_MAX   EQU -100
 = "-100"			LOWER_MAX_T EQU <"-100">
 =-00000032			UPPER_MIN   EQU -50
 = "-50"			UPPER_MIN_T EQU <"-50">
 =-00000001			UPPER_MAX   EQU -1
 = "-1"				UPPER_MAX_T EQU <"-1">

				; Intro & Prompt Strings
 00000000 48 69 2C 20 49	intro		BYTE "Hi, I'm Kelley. Welcome to the Integer Accumulation Game!", 0
	   27 6D 20 4B 65
	   6C 6C 65 79 2E
	   20 57 65 6C 63
	   6F 6D 65 20 74
	   6F 20 74 68 65
	   20 49 6E 74 65
	   67 65 72 20 41
	   63 63 75 6D 75
	   6C 61 74 69 6F
	   6E 20 47 61 6D
	   65 21 00
 0000003A 2A 2A 45 43 3A	xtra_cred	BYTE "**EC: Number the lines during user input. Increment the line number only for valid number entries", 0
	   20 4E 75 6D 62
	   65 72 20 74 68
	   65 20 6C 69 6E
	   65 73 20 64 75
	   72 69 6E 67 20
	   75 73 65 72 20
	   69 6E 70 75 74
	   2E 20 49 6E 63
	   72 65 6D 65 6E
	   74 20 74 68 65
	   20 6C 69 6E 65
	   20 6E 75 6D 62
	   65 72 20 6F 6E
	   6C 79 20 66 6F
	   72 20 76 61 6C
	   69 64 20 6E 75
	   6D 62 65 72 20
	   65 6E 74 72 69
	   65 73 00
 0000009C 57 68 61 74 20	intro_2		BYTE "What is your name? ", 0
	   69 73 20 79 6F
	   75 72 20 6E 61
	   6D 65 3F 20 00
 000000B0 50 6C 65 61 73	rules_1     BYTE "Please enter a number in ranges [", LOWER_MIN_T, ",", LOWER_MAX_T, "] or [", UPPER_MIN_T, ",", UPPER_MAX_T, "].", 0
	   65 20 65 6E 74
	   65 72 20 61 20
	   6E 75 6D 62 65
	   72 20 69 6E 20
	   72 61 6E 67 65
	   73 20 5B 2D 32
	   30 30 2C 2D 31
	   30 30 5D 20 6F
	   72 20 5B 2D 35
	   30 2C 2D 31 5D
	   2E 00
 000000E9 45 6E 74 65 72	rules_2		BYTE "Enter a non-negative number when you are finished to see results.", 0
	   20 61 20 6E 6F
	   6E 2D 6E 65 67
	   61 74 69 76 65
	   20 6E 75 6D 62
	   65 72 20 77 68
	   65 6E 20 79 6F
	   75 20 61 72 65
	   20 66 69 6E 69
	   73 68 65 64 20
	   74 6F 20 73 65
	   65 20 72 65 73
	   75 6C 74 73 2E
	   00
 0000012B  00000021 [		username	BYTE 33 DUP(0) ;string from user input
	    00
	   ]
 0000014C 48 65 6C 6C 6F	hello       BYTE "Hello ", 0
	   20 00
 00000153 2E 20 00		period		BYTE ". ", 0
 00000156 45 6E 74 65 72	instruct	BYTE "Enter number: ", 0
	   20 6E 75 6D 62
	   65 72 3A 20 00
 00000165 4E 75 6D 62 65	notify		BYTE "Number Invalid!", 0
	   72 20 49 6E 76
	   61 6C 69 64 21
	   00

				; These variables are for numeric calculations
 00000175 00000000		count		DWORD 0
 00000179 00000000		average		DWORD ?
 0000017D FFFFFF37		max			DWORD -201 ; set max to below the lower bound
 00000181 00000000		min 		DWORD 0 ; set min to above the upper bound
 00000185 00000000		sum			DWORD ?
 00000189 00000000		remainder	DWORD 0
 0000018D 00000002		half        DWORD 2 ; for dividing by two

				; Summary & Conclusion Strings
 00000191 59 6F 75 20 65	val_nums1	BYTE "You entered ", 0
	   6E 74 65 72 65
	   64 20 00
 0000019E 20 76 61 6C 69	val_nums2	BYTE " valid numbers.", 0
	   64 20 6E 75 6D
	   62 65 72 73 2E
	   00
 000001AE 54 68 65 20 6D	max_msg		BYTE "The maximum valid number is ", 0
	   61 78 69 6D 75
	   6D 20 76 61 6C
	   69 64 20 6E 75
	   6D 62 65 72 20
	   69 73 20 00
 000001CB 54 68 65 20 6D	min_msg		BYTE "The minimum valid number is ", 0
	   69 6E 69 6D 75
	   6D 20 76 61 6C
	   69 64 20 6E 75
	   6D 62 65 72 20
	   69 73 20 00
 000001E8 54 68 65 20 73	sum_msg		BYTE "The sum of your valid numbers is ", 0
	   75 6D 20 6F 66
	   20 79 6F 75 72
	   20 76 61 6C 69
	   64 20 6E 75 6D
	   62 65 72 73 20
	   69 73 20 00
 0000020A 54 68 65 20 72	avg_msg		BYTE "The rounded average is ", 0
	   6F 75 6E 64 65
	   64 20 61 76 65
	   72 61 67 65 20
	   69 73 20 00
 00000222 4E 6F 20 76 61	no_nums		BYTE "No valid numbers entered.", 0 
	   6C 69 64 20 6E
	   75 6D 62 65 72
	   73 20 65 6E 74
	   65 72 65 64 2E
	   00
 0000023C 46 61 72 65 77	goodbye		BYTE "Farewell my dear ", 0
	   65 6C 6C 20 6D
	   79 20 64 65 61
	   72 20 00
 0000024E 21 00			exclaim		BYTE "!", 0


 00000000			.code
 00000000			main PROC

				; Display program title and programmer's name
 00000000  BA 00000000 R		mov EDX, OFFSET intro
 00000005  E8 00000000 E		call WriteString
 0000000A  E8 00000000 E		call CrLf
 0000000F  BA 0000003A R		mov EDX, OFFSET xtra_cred
 00000014  E8 00000000 E		call WriteString
 00000019  E8 00000000 E		call CrLf
					

				; Get the user's name
 0000001E  BA 0000009C R		mov EDX, OFFSET intro_2
 00000023  E8 00000000 E		call WriteString
 00000028  BA 0000012B R		mov EDX, OFFSET username ; point to the buffer for username
 0000002D  B9 00000020			mov ECX, 32 ;specify max characters at 21
 00000032  E8 00000000 E		call ReadString

				; Greet user by name
 00000037  BA 0000014C R		mov EDX, OFFSET hello
 0000003C  E8 00000000 E		call WriteString
 00000041  BA 0000012B R		mov EDX, OFFSET username
 00000046  E8 00000000 E		call WriteString
 0000004B  E8 00000000 E		call CrLf
 00000050  E8 00000000 E		call CrLf

				; Display rules to the game
 00000055  BA 000000B0 R		mov EDX, OFFSET rules_1
 0000005A  E8 00000000 E		call CrLf
 0000005F  E8 00000000 E		call WriteString
 00000064  BA 000000E9 R		mov EDX, OFFSET rules_2
 00000069  E8 00000000 E		call CrLf
 0000006E  E8 00000000 E		call WriteString
 00000073  E8 00000000 E		call CrLf
					;Do the first numbered line of user input
 00000078  A1 00000175 R		mov EAX, count
 0000007D  E8 00000000 E		call writeDec
 00000082  BA 00000153 R		mov EDX, OFFSET period
 00000087  E8 00000000 E		call WriteString

				; Get current number from user
 0000008C			_DisplayInstructions:
 0000008C  BA 00000156 R		mov EDX, OFFSET instruct
 00000091  E8 00000000 E		call WriteString
 00000096  E8 00000000 E		call ReadInt

				; Validate the user input
 0000009B  83 F8 9C			cmp EAX, LOWER_MAX
 0000009E  74 25			JE  _TallyNumber ; if the number is equal to LOWER_MAX
 000000A0  7F 02			JG	_GreaterThanLowerMaxSigned ; if the number is greater than LOWER_MAX
 000000A2  7C 14			JL  _LessThanLowerMaxSigned ; if the number is less than LOWER_MAX

 000000A4			_GreaterThanLowerMaxSigned:
 000000A4  83 F8 00			cmp EAX, 0 
 000000A7  0F 8D 000000DB		JGE _DisplayData ; if the number is greater than or equal to zero
 000000AD  83 F8 CE			cmp EAX, UPPER_MIN
 000000B0  7D 13			JGE  _TallyNumber ; if the number is between UPPER_MIN and UPPER_MAX
 000000B2  0F 8C 000000A8		JL  _NotifyUser ; if the number is also less than UPPER_MIN (between LOWER_MAX and UPPER_MIN)

 000000B8			_LessThanLowerMaxSigned:
 000000B8  3D FFFFFF38			cmp EAX, LOWER_MIN
 000000BD  7D 06			JGE  _TallyNumber ; if the number is in between LOWER_MIN and LOWER_MAX
 000000BF  0F 8C 0000009B		JL  _NotifyUser ; if the number is less than LOWER_MIN

				; Do Computations
 000000C5			_TallyNumber:
					; Increment Count 
 000000C5  FF 05 00000175 R		INC count
					; Sum
 000000CB  01 05 00000185 R		ADD sum, EAX
				 
 000000D1			_UpdateMinMax:
					; Compute min/max
 000000D1  3B 05 00000181 R		cmp EAX, min
 000000D7  7C 73			JL _UpdateMin
 000000D9  3B 05 0000017D R		cmp EAX, max
 000000DF  7F 75			JG _UpdateMax
 000000E1  EB 00			JMP _CalculateAverage

 000000E3			_CalculateAverage:
					; Compute current rounded average

					; First divide the sum by the count (integer division)
 000000E3  A1 00000185 R		mov EAX, sum
 000000E8  99				CDQ
 000000E9  F7 3D 00000175 R		IDIV count
 000000EF  A3 00000179 R		mov average, EAX

					; Then, determine if we need to round up
					; We round up if the remainder is greater than
					;  half of the count
 000000F4  89 15 00000189 R		mov remainder, EDX
 000000FA  A1 00000175 R		mov EAX, count
 000000FF  99				CDQ
 00000100  F7 3D 0000018D R		IDIV half
 00000106  F7 1D 00000189 R		NEG remainder
 0000010C  39 05 00000189 R		cmp remainder, EAX
 00000112  7D 19			JGE _RoundUp
					; Number the next line of user input
 00000114  A1 00000175 R		mov EAX, count
 00000119  E8 00000000 E		call writeDec
 0000011E  BA 00000153 R		mov EDX, OFFSET period
 00000123  E8 00000000 E		call WriteString
					; Prompt user again
 00000128  E9 FFFFFF5F			JMP _DisplayInstructions

				; Rounding "up" is actually decrementing b/c negative
 0000012D			_RoundUp:
 0000012D  FF 0D 00000179 R		DEC average
					; Number the next line of user input
 00000133  A1 00000175 R		mov EAX, count
 00000138  E8 00000000 E		call writeDec
 0000013D  BA 00000153 R		mov EDX, OFFSET period
 00000142  E8 00000000 E		call WriteString
					; Prompt user again
 00000147  E9 FFFFFF40			JMP _DisplayInstructions


 0000014C			_UpdateMin:
 0000014C  A3 00000181 R		mov min, EAX
 00000151  E9 FFFFFF7B			JMP _UpdateMinMax

 00000156			_UpdateMax:
 00000156  A3 0000017D R		mov max, EAX
 0000015B  E9 FFFFFF71			JMP _UpdateMinMax


				; Notify the user of invalid negative numbers
 00000160			_NotifyUser:
 00000160  BA 00000165 R		mov EDX, OFFSET notify
 00000165  E8 00000000 E		call WriteString
 0000016A  E8 00000000 E		call CrLf
					; Number the next line of user input
 0000016F  A1 00000175 R		mov EAX, count
 00000174  E8 00000000 E		call writeDec
 00000179  BA 00000153 R		mov EDX, OFFSET period
 0000017E  E8 00000000 E		call WriteString
					; Prompt user again
 00000183  E9 FFFFFF04			JMP _DisplayInstructions

				; Display data 
 00000188			_DisplayData:
					; Handle the case where no valid numbers are entered
 00000188  83 3D 00000175 R		cmp count, 0
	   00
 0000018F  0F 84 00000089		JE _NoNumbers
					; Display the number of valid numbers entered
 00000195  BA 00000191 R		mov EDX, OFFSET val_nums1
 0000019A  E8 00000000 E		call WriteString
 0000019F  A1 00000175 R		mov EAX, count
 000001A4  E8 00000000 E		call WriteDec
 000001A9  BA 0000019E R		mov EDX, OFFSET val_nums2
 000001AE  E8 00000000 E		call WriteString
 000001B3  E8 00000000 E		call CrLf
					; display the max 
 000001B8  BA 000001AE R		mov EDX, OFFSET max_msg
 000001BD  E8 00000000 E		call WriteString
 000001C2  A1 0000017D R		mov EAX, max
 000001C7  E8 00000000 E		call WriteInt
 000001CC  E8 00000000 E		call CrLf
					; display the min
 000001D1  BA 000001CB R		mov EDX, OFFSET min_msg
 000001D6  E8 00000000 E		call WriteString
 000001DB  A1 00000181 R		mov EAX, min
 000001E0  E8 00000000 E		call WriteInt
 000001E5  E8 00000000 E		call CrLf	
					; display the sum
 000001EA  BA 000001E8 R		mov EDX, OFFSET sum_msg
 000001EF  E8 00000000 E		call WriteString
 000001F4  A1 00000185 R		mov EAX, sum
 000001F9  E8 00000000 E		call WriteInt
 000001FE  E8 00000000 E		call CrLf
					; display the rounded average
 00000203  BA 0000020A R		mov EDX, OFFSET avg_msg
 00000208  E8 00000000 E		call WriteString
 0000020D  A1 00000179 R		mov EAX, average
 00000212  E8 00000000 E		call WriteInt
 00000217  E8 00000000 E		call CrLf
 0000021C  EB 28			JMP _SayGoodbye

 0000021E			_NoNumbers:
 0000021E  BA 00000222 R		mov EDX, OFFSET no_nums
 00000223  E8 00000000 E		call WriteString
 00000228  E8 00000000 E		call CrLf
					;Do the first numbered line of user input again
 0000022D  A1 00000175 R		mov EAX, count
 00000232  E8 00000000 E		call writeDec
 00000237  BA 00000153 R		mov EDX, OFFSET period
 0000023C  E8 00000000 E		call WriteString
					;Prompt user again
 00000241  E9 FFFFFE46			JMP _DisplayInstructions 



				; Say goodbye (with the user's name)
 00000246			_SayGoodbye:
 00000246  E8 00000000 E		call CrLf
 0000024B  E8 00000000 E		call CrLf
 00000250  BA 0000023C R		mov EDX, OFFSET goodbye
 00000255  E8 00000000 E		call WriteString
 0000025A  BA 0000012B R		mov EDX, OFFSET username
 0000025F  E8 00000000 E		call WriteString
 00000264  BA 0000024E R		mov EDX, OFFSET exclaim
 00000269  E8 00000000 E		call WriteString
 0000026E  E8 00000000 E		call CrLf

					Invoke ExitProcess,0	; exit to operating system
 00000273  6A 00	   *	    push   +000000000h
 00000275  E8 00000000 E   *	    call   ExitProcess
 0000027A			main ENDP

				; (insert additional procedures here)

				END main
Microsoft (R) Macro Assembler Version 14.28.29335.0	    02/09/21 23:01:03
<Data Validation, Looping, and Constants     (Proj3_SharpKel  Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000250 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000027A Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000027A Public STDCALL
  _DisplayInstructions . . . . .	L Near	 0000008C _TEXT	
  _GreaterThanLowerMaxSigned . .	L Near	 000000A4 _TEXT	
  _LessThanLowerMaxSigned  . . .	L Near	 000000B8 _TEXT	
  _TallyNumber . . . . . . . . .	L Near	 000000C5 _TEXT	
  _UpdateMinMax  . . . . . . . .	L Near	 000000D1 _TEXT	
  _CalculateAverage  . . . . . .	L Near	 000000E3 _TEXT	
  _RoundUp . . . . . . . . . . .	L Near	 0000012D _TEXT	
  _UpdateMin . . . . . . . . . .	L Near	 0000014C _TEXT	
  _UpdateMax . . . . . . . . . .	L Near	 00000156 _TEXT	
  _NotifyUser  . . . . . . . . .	L Near	 00000160 _TEXT	
  _DisplayData . . . . . . . . .	L Near	 00000188 _TEXT	
  _NoNumbers . . . . . . . . . .	L Near	 0000021E _TEXT	
  _SayGoodbye  . . . . . . . . .	L Near	 00000246 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
LOWER_MAX_T  . . . . . . . . . .	Text   	 "-100"
LOWER_MAX  . . . . . . . . . . .	Number	 -00000064h   
LOWER_MIN_T  . . . . . . . . . .	Text   	 "-200"
LOWER_MIN  . . . . . . . . . . .	Number	 -000000C8h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
UPPER_MAX_T  . . . . . . . . . .	Text   	 "-1"
UPPER_MAX  . . . . . . . . . . .	Number	 -00000001h   
UPPER_MIN_T  . . . . . . . . . .	Text   	 "-50"
UPPER_MIN  . . . . . . . . . . .	Number	 -00000032h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
average  . . . . . . . . . . . .	DWord	 00000179 _DATA	
avg_msg  . . . . . . . . . . . .	Byte	 0000020A _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
count  . . . . . . . . . . . . .	DWord	 00000175 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exclaim  . . . . . . . . . . . .	Byte	 0000024E _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
goodbye  . . . . . . . . . . . .	Byte	 0000023C _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
half . . . . . . . . . . . . . .	DWord	 0000018D _DATA	
hello  . . . . . . . . . . . . .	Byte	 0000014C _DATA	
instruct . . . . . . . . . . . .	Byte	 00000156 _DATA	
intro_2  . . . . . . . . . . . .	Byte	 0000009C _DATA	
intro  . . . . . . . . . . . . .	Byte	 00000000 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
max_msg  . . . . . . . . . . . .	Byte	 000001AE _DATA	
max  . . . . . . . . . . . . . .	DWord	 0000017D _DATA	
min_msg  . . . . . . . . . . . .	Byte	 000001CB _DATA	
min  . . . . . . . . . . . . . .	DWord	 00000181 _DATA	
no_nums  . . . . . . . . . . . .	Byte	 00000222 _DATA	
notify . . . . . . . . . . . . .	Byte	 00000165 _DATA	
period . . . . . . . . . . . . .	Byte	 00000153 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
remainder  . . . . . . . . . . .	DWord	 00000189 _DATA	
rules_1  . . . . . . . . . . . .	Byte	 000000B0 _DATA	
rules_2  . . . . . . . . . . . .	Byte	 000000E9 _DATA	
sum_msg  . . . . . . . . . . . .	Byte	 000001E8 _DATA	
sum  . . . . . . . . . . . . . .	DWord	 00000185 _DATA	
username . . . . . . . . . . . .	Byte	 0000012B _DATA	
val_nums1  . . . . . . . . . . .	Byte	 00000191 _DATA	
val_nums2  . . . . . . . . . . .	Byte	 0000019E _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
xtra_cred  . . . . . . . . . . .	Byte	 0000003A _DATA	
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
